[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "neurpi"
version = "2.0.0"
description = "Unified Neuroscience Experiment Framework for Distributed Systems"
readme = "README.md"
license = "MIT"
requires-python = ">=3.13"
authors = [
    { name = "NeuRPi Contributors" },
]
keywords = ["neuroscience", "experiments", "distributed-systems", "raspberry-pi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
]

dependencies = [
    # Core dependencies
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "rich>=13.0.0",
    "click>=8.0.0",
    "loguru>=0.7.0",
    # Networking
    "pyzmq>=25.0.0",
    "tornado>=6.0.0",
    # Data processing
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.10.0",
    "h5py>=3.8.0",
    "tables>=3.8.0",
    # Configuration
    "omegaconf>=2.3.0",
    "hydra-core>=1.3.0",
    "pyyaml>=6.0.0",
    # Hardware (optional)
    "pyserial>=3.5",
    # Compression
    "blosc2>=2.0.0",
    "pyqt6>=6.9.0",
]

[project.optional-dependencies]
# GUI dependencies
gui = [
    "PyQt6>=6.5.0",
    "pyqtgraph>=0.13.0",
    "matplotlib>=3.7.0",
    "opencv-python>=4.8.0",
]

# Tauri-based modern GUI (no Python packages - Tauri is Rust-based)
tauri-gui = []

# Hardware-specific dependencies
raspberry-pi = [
    "RPi.GPIO>=0.7.1",
    "pigpio>=1.78",
    "adafruit-circuitpython-busdevice",
    "adafruit-circuitpython-mpr121",
]

# Stimulus presentation
stimulus = [
    "pygame>=2.5.0",
    "psychopy>=2023.2.0",
]

# Audio
audio = [
    "sounddevice>=0.4.6",
    "soundfile>=0.12.1",
]

# Distributed computing
distributed = [
    "ray[default]>=2.8.0",
    "dask[complete]>=2023.12.0",
]

# Development dependencies
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]

# Docker support
docker = [
    "docker>=6.1.0",
]

# All optional dependencies
all = [
    "neurpi[gui,raspberry-pi,stimulus,audio,distributed,docker]",
]

[project.urls]
Homepage = "https://github.com/neurpi/neurpi"
Documentation = "https://neurpi.readthedocs.io"
Repository = "https://github.com/neurpi/neurpi"
"Bug Tracker" = "https://github.com/neurpi/neurpi/issues"

[project.scripts]
neurpi = "neurpi.cli:main"
neurpi-pilot = "neurpi.agents.pilot:main"
neurpi-terminal = "neurpi.agents.terminal:main"
neurpi-config = "neurpi.config.cli:main"

[tool.hatch.version]
path = "neurpi/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["neurpi"]

[tool.hatch.build.targets.sdist]
include = [
    "/neurpi",
    "/README.md",
    "/LICENSE",
]

# Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=neurpi --cov-report=term-missing --cov-report=html"

# Code formatting
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

# Type checking
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
